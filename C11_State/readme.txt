收获：
1.关于hpp文件使用：hpp文件使得可以在头文件完成函数定义,但是如果出现循环引用即
class A{
    void fun(B b);
}
class B{
    void fun(A a);
}
就会出错.
解决方法就是用C语言的方法,在h文件中进行声明,在cpp文件中进行定义,然后
进行前置声明.

2.使用智能指针代替指针.shared_ptr需要引入memory头文件
make_shared<类>(参数列表) 相当于 new 类(参数列表)

状态模式的使用场景:
当一个对象的行为取决于它的状态,并且它必须时刻根据状态改变它的行为时.
最明显的是状态多的时候很多if-else分支的时候,可以使用该模式.

加入新状态的方法:
加入新的状态,继承抽象状态,这样即可.无需修改其他内容